apply plugin: 'com.android.library'

apply plugin: 'com.github.dcendents.android-maven'
group='com.github.tomicdev'

android {
    compileSdkVersion 26

    defaultConfig {
        minSdkVersion 26
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }

//    sourceSets {
//        main {
//            java {
//                exclude 'com/tomicdev/gattparser*'
//            }
//        }
//    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'com.android.support:appcompat-v7:26.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    //    https://stackoverflow.com/questions/34486111/cant-add-xstream-1-4-8-dependency-to-android-using-gradle (excluding xmlpull module should suffice)
    compile ('com.thoughtworks.xstream:xstream:1.4.9') {
        exclude group: 'xmlpull', module: 'xmlpull'
    }
    compile 'com.google.code.gson:gson:2.8.2'
    compile 'com.google.guava:guava:24.1-android'
    compile group: 'org.slf4j', name: 'slf4j-android', version: '1.7.7'
    compile 'commons-beanutils:commons-beanutils:1.9.3'

}


// build a jar with source files
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    failOnError  false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.compile
}

// build a jar with javadoc
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar

}
